"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DotsDot = void 0;

var _react = _interopRequireWildcard(require("react"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class DotsDot extends _react.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleClick", () => {
      const _this$props = this.props,
            onClick = _this$props.onClick,
            index = _this$props.index;
      onClick(index);
    });
  }

  get cssClass() {
    const className = this.props.className;
    return `rcc-Dot ${className || ''}`;
  }

  render() {
    const _this$props2 = this.props,
          current = _this$props2.current,
          component = _this$props2.component;
    const CustomContent = component;
    return _react.default.createElement("span", {
      className: this.cssClass,
      onClick: this.handleClick
    }, component ? _react.default.createElement(CustomContent, {
      current: current
    }) : _react.default.createElement(DefaultContent, {
      current: current
    }));
  }

}

exports.DotsDot = DotsDot;

const DefaultContent = (_ref) => {
  let current = _ref.current;
  return current ? _react.default.createElement("div", {
    className: "rcc-Circle-icon rcc-Circle-icon--filled"
  }) : _react.default.createElement("div", {
    className: "rcc-Circle-icon"
  });
};
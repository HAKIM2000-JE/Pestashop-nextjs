import React, { PureComponent } from 'react';
import { withContentRect } from 'react-measure';
import { ListItems } from './ListItems';
export class List extends PureComponent {
  get cssClass() {
    const className = this.props.className;
    return `rcc-List ${className || ''}`;
  }

  render() {
    const _this$props = this.props,
          items = _this$props.items,
          measureRef = _this$props.measureRef,
          showItemsCount = _this$props.showItemsCount,
          width = _this$props.contentRect.bounds.width,
          currentIndex = _this$props.currentIndex,
          direction = _this$props.direction,
          transitionDuration = _this$props.transitionDuration,
          translateX = _this$props.translateX,
          scrollItems = _this$props.scrollItems,
          onNext = _this$props.onNext,
          onPrev = _this$props.onPrev,
          enableDragScroll = _this$props.enableDragScroll,
          enable3d = _this$props.enable3d,
          nextIndex = _this$props.nextIndex,
          inTransition = _this$props.inTransition,
          effectOf3d = _this$props.effectOf3d;
    return React.createElement("div", {
      className: this.cssClass,
      ref: measureRef
    }, React.createElement(ListItems, {
      itemWidth: width / showItemsCount,
      showItemsCount: showItemsCount,
      currentIndex: currentIndex,
      nextIndex: nextIndex,
      direction: direction,
      transitionDuration: transitionDuration,
      translateX: translateX,
      scrollItems: scrollItems,
      onNext: onNext,
      onPrev: onPrev,
      enableDragScroll: enableDragScroll,
      enable3d: enable3d,
      effectOf3d: effectOf3d,
      inTransition: inTransition
    }, items));
  }

}
export default withContentRect('bounds')(List);